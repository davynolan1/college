package ConnectFour;

public class Connect4Grid2DArray implements Connect4Grid{
	public static final int BOARD_WIDTH = 7; 
	public static final int BOARD_HEIGHT = 6; 
	public static final int BOTTOM_ROW = 5;
	public static final int MAX_SLOTS = 42;
	String winner = "";
	
	
	public void emptyGrid() {
		
	}
	
	public boolean isValidColumn(int column, char[][]board) {
		if(!isColumnFull(column, board)) {
			return true;
		}
		return false;
	}
	public boolean isColumnFull(int column, char[][]board) {
		int count = 0;
		int arrayCol = column ;
		for(int i=0; i<BOARD_HEIGHT; i++ ) {
			char tmp = board[i][arrayCol];
			if(tmp == 'X' || tmp == 'O') {
				count++;
			}
		}
		if(count == 6) {
			return true;
		}
		return false;
	}
	public void dropPiece(ConnectPlayer player, int column, char[][]board) {
		int[] counter = new int [7];
		
			
			
			int arrayColumn = column -1;
			if(isValidColumn(arrayColumn, board)) {
				if(board[BOTTOM_ROW][arrayColumn] == 0 ) {
					board[BOTTOM_ROW][arrayColumn] = player.getPlayerPiece();
					
				}
				else if(board[BOTTOM_ROW][arrayColumn] != 0 ) {
					counter[arrayColumn]++;
					if(board[BOTTOM_ROW - counter[arrayColumn]][arrayColumn] != 'X' || board[BOTTOM_ROW - counter[arrayColumn]][arrayColumn] != 'O') {
						board[BOTTOM_ROW - counter[arrayColumn]][arrayColumn] = player.getPlayerPiece();
						
					}
				}
			}
		
		
		
	}
	public boolean didLastPieceConnect4(char[][]board) {
		
		int XHCounter = 0;
		int OHCounter = 0;
		int XVCounter = 0;
		int OVCounter = 0;
		int XDForCounter = 1;
		int XDBackCounter = 1;
		int ODForCounter = 1;
		int ODBackCounter = 1;
		for(int w=0; w<BOARD_HEIGHT-1; w++) {
			for(int h=0; h<BOARD_WIDTH-1; h++) {
				if(board[w][h] == 'X') {
					XHCounter++;
					if(board[w+1][h+1] == 'X') {
						XDForCounter++;
					}
					else {
						XDForCounter = 1;
					}
					if(board[w-1][h-1] == 'X') {
						XDBackCounter++;
					}
					else {
						XDBackCounter = 1;
					}
				}
				else {
					XHCounter = 0;
				}
				if(board[w][h] == 'O') {
					OHCounter++;
					if(board[w+1][h+1] == 'O') {
						ODForCounter++;
					}
					else {
						ODForCounter = 1;
					}
					if(board[w-1][h-1] == 'O') {
						ODBackCounter++;
					}
					else {
						ODBackCounter = 1;
					}
				}
				else {
					OHCounter = 0;
				}
				
				if(board[h][w] == 'X') {
					XVCounter++;
				}
				else {
					XVCounter = 0;
				}
				if(board[h][w] == 'O') {
					OVCounter++;
				}
				else {
					OVCounter = 0;
				}
				
				
				
				if(XHCounter >= 4 || XVCounter >= 4) {
					this.winner = "Player 1";
					return true;
					
				}
				if(OHCounter >= 4 || OVCounter >= 4) {
					this.winner = "Player 2";
					return true;
					
				}
			}
		}
		
		return false;
	}
	public boolean isGridFull(char[][]board) {
		int count = 0;
		for(int w=0; w<BOARD_HEIGHT; w++) {
			for(int h=0; h<BOARD_WIDTH; h++) {
				if(board[w][h] == 'X' || board[w][h] == 'O') {
					count++;
				}
				if(count == MAX_SLOTS) {
					return true;
				}
			}
		}
		return false;
	}

	
	public String toString(char[][]board) {
		return "Connect4Grid [didLastPieceConnect4()=" + didLastPieceConnect4(board) + ", isGridFull()=" + isGridFull(board)
				+ "]";
	}
	
	
	
	
}
