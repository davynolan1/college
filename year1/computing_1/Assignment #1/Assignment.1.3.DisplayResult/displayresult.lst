


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             DisplayResult, CODE, READONLY
    2 00000000                 IMPORT           main
    3 00000000                 IMPORT           getkey
    4 00000000                 IMPORT           sendchar
    5 00000000                 EXPORT           start
    6 00000000                 PRESERVE8
    7 00000000         
    8 00000000         start
    9 00000000         
   10 00000000 E3A0600A        LDR              R6, =10     ;power value
   11 00000004 E3A04000        LDR              R4, =0
   12 00000008 E3A08000        LDR              R8, =0      ;2nd operand
   13 0000000C E3A09000        LDR              R9, =0      ;1st operand
   14 00000010 E3A0A000        LDR              R10, =0     ;operator codes
   15 00000014 E3A03000        LDR              R3, =0      ;tells whethere 2nd
                                                             operand has been e
                                                            ntered or not
   16 00000018 E3A05000        LDR              R5, =0      ;stores result from
                                                             expressions
   17 0000001C E3A07001        LDR              R7, =1      ;power value
   18 00000020 E3A0B00A        LDR              R11, =10
   19 00000024 E3A0C000        LDR              R12, =0     ;division remainder
                                                            
   20 00000028         read
   21 00000028 EBFFFFFE        BL               getkey      ;read key from cons
                                                            ole
   22 0000002C E350000D        CMP              R0, #0x0D   ;while (key != CR)
   23 00000030 0A000010        BEQ              endRead     ;{
   24 00000034 E350002B        CMP              R0, #0x2B   ;compare read key t
                                                            o '+'
   25 00000038 0A000014        BEQ              addition    ;branch to addition
                                                             if '+' is entered
   26 0000003C E350002D        CMP              R0, #0x2D   ;compare read key t
                                                            o '-'
   27 00000040 0A000019        BEQ              subtraction ;branch to subtract
                                                            ion if '-' is enter
                                                            ed
   28 00000044 E350002A        CMP              R0, #0x2A   ;compare read key t
                                                            o '*'
   29 00000048 0A00001E        BEQ              multiplication ;branch to multi
                                                            plication if '*' is
                                                             entered
   30 0000004C EBFFFFFE        BL               sendchar    ;echo key back to c
                                                            onsole
   31 00000050         
   32 00000050         
   33 00000050 E0040496        MUL              R4, R6, R4  ;result = result x 
                                                            10
   34 00000054 E2405030        SUB              R5, R0, #0x30 ;convert ascii to
                                                             numeric
   35 00000058 E0844005        ADD              R4, R4, R5  ;result = result + 
                                                            value
   36 0000005C         
   37 0000005C E35A0000        CMP              R10, #0     ; while ( R10 < 0)
   38 00000060 8A000001        BHI              operand2    ; {
   39 00000064 E1A09004        MOV              R9, R4      ; make R4 the first
                                                             operand
   40 00000068 EAFFFFEE        B                read        ; }
   41 0000006C         



ARM Macro Assembler    Page 2 


   42 0000006C         operand2
   43 0000006C E1A08004        MOV              R8, R4      ; make R4 the secon
                                                            d operand
   44 00000070 E3A03001        MOV              R3, #1      ; give R3 the value
                                                             of 1
   45 00000074 EAFFFFEB        B                read
   46 00000078         
   47 00000078         endRead
   48 00000078 E35A0001        CMP              R10, #1     ; while (R10 != 1)
   49 0000007C 0A000003        BEQ              addition    ; {
   50 00000080 E35A0002        CMP              R10, #2     ;   while (R10 != 1
                                                            )
   51 00000084 0A000008        BEQ              subtraction ;   {
   52 00000088 E35A0003        CMP              R10, #3     ;     while (R10 !=
                                                             3)
   53 0000008C 0A00000D        BEQ              multiplication ;     {
   54 00000090         
   55 00000090         
   56 00000090         
   57 00000090         addition
   58 00000090 EBFFFFFE        BL               sendchar    ;echo key back to c
                                                            onsole
   59 00000094 E3A04000        LDR              R4, =0      ;update R4 to 0
   60 00000098 E3A0A001        LDR              R10, =1     ;update R10 to 1
   61 0000009C E3530000        CMP              R3, #0      ;while (R3 != 0)
   62 000000A0 0AFFFFE0        BEQ              read        ;{
   63 000000A4 E0895008        ADD              R5, R9, R8  ;add 1st operand to
                                                             2nd operand and st
                                                            ore result in R5
   64 000000A8 EA00000D        B                division1   ;}
   65 000000AC         
   66 000000AC         subtraction
   67 000000AC EBFFFFFE        BL               sendchar    ;echo key back to c
                                                            onsole
   68 000000B0 E3A04000        LDR              R4, =0      ;update R4 to 0
   69 000000B4 E3A0A002        LDR              R10, =2     ;update R10 to 2
   70 000000B8 E3530000        CMP              R3, #0      ;while (R3 != 0)
   71 000000BC 0AFFFFD9        BEQ              read        ;{
   72 000000C0 E0495008        SUB              R5, R9, R8  ;subtract 1st opera
                                                            nd from 2nd operand
                                                             and store result i
                                                            n R5
   73 000000C4 EA000006        B                division1   ;}
   74 000000C8         
   75 000000C8         multiplication
   76 000000C8 EBFFFFFE        BL               sendchar    ;echo key back to c
                                                            onsole
   77 000000CC E3A04000        LDR              R4, =0      ;update R4 to 0
   78 000000D0 E3A0A003        LDR              R10, =3     ;update R10 to 3
   79 000000D4 E3530000        CMP              R3, #0      ;while (R3 != 0)
   80 000000D8 0AFFFFD2        BEQ              read        ;{
   81 000000DC E0050899        MUL              R5, R9, R8  ;multiply 1st opera
                                                            nd by 2nd operand a
                                                            nd store result in 
                                                            R5
   82 000000E0 EAFFFFFF        B                division1   ;}
   83 000000E4         
   84 000000E4         
   85 000000E4         



ARM Macro Assembler    Page 3 


   86 000000E4         division1
   87 000000E4 E1550006        CMP              R5, R6      ;while (R5 >= 10)
   88 000000E8 9A000004        BLS              endDivision1 ;{
   89 000000EC E2877001        ADD              R7, #1
   90 000000F0 E3570009        CMP              R7, #9      ; while( R7 != 9)
   91 000000F4 0A000002        BEQ              largeNum    ; {
   92 000000F8 E006069B        MUL              R6, R11, R6
   93 000000FC EAFFFFF8        B                division1
   94 00000100         endDivision1
   95 00000100         
   96 00000100         nextDigit
   97 00000100 E2477001        SUB              R7, #1
   98 00000104         
   99 00000104         largeNum
  100 00000104 E1A02007        MOV              R2, R7
  101 00000108 E3A0600A        LDR              R6, =10
  102 0000010C         
  103 0000010C         division2
  104 0000010C E3570000        CMP              R7, #0      ;while(R7 != 0)
  105 00000110 0A000013        BEQ              lastDigit   ;{
  106 00000114 E3570001        CMP              R7, #1      ; while(R7 != 1)
  107 00000118 0A000004        BEQ              endDivision2 ; {
  108 0000011C E3520001        CMP              R2, #1      ;  while(R2 != 1)
  109 00000120 0A000002        BEQ              endDivision2 ;  {
  110 00000124 E006069B        MUL              R6, R11, R6 ;   R6 = R11 * 10
  111 00000128 E2422001        SUB              R2, #1
  112 0000012C EAFFFFF6        B                division2   ;}}}
  113 00000130         endDivision2
  114 00000130 E3A0000A        MOV              R0, #0x0A   ; R0 = new line
  115 00000134 EBFFFFFE        BL               sendchar    ; print new line
  116 00000138 E1A0C005        MOV              R12, R5
  117 0000013C E3A00000        LDR              R0, =0
  118 00000140         
  119 00000140         middleDigit
  120 00000140 E15C0006        CMP              R12, R6     ;while(R12 > R6)
  121 00000144 3A000002        BLO              endMiddleDigit ;{
  122 00000148 E2800001        ADD              R0, #1
  123 0000014C E04CC006        SUB              R12, R6
  124 00000150 EAFFFFFA        B                middleDigit ;}
  125 00000154         endMiddleDigit
  126 00000154         
  127 00000154         printDigit
  128 00000154 E2800030        ADD              R0, #0x30   ; R0 =quotient + ch
                                                            aracter '0'
  129 00000158 EBFFFFFE        BL               sendchar    ; print
  130 0000015C E1A0500C        MOV              R5, R12
  131 00000160 EAFFFFE6        B                nextDigit
  132 00000164         
  133 00000164         lastDigit
  134 00000164 E1A00005        MOV              R0, R5
  135 00000168 E2800030        ADD              R0, #0x30
  136 0000016C EBFFFFFE        BL               sendchar
  137 00000170 EAFFFFFF        B                endProgram
  138 00000174         
  139 00000174         endProgram
  140 00000174 E3A0000A        LDR              R0, =0x0A
  141 00000178 EBFFFFFE        BL               sendchar
  142 0000017C EAFFFFFE        B                start
  143 00000180         programQuit



ARM Macro Assembler    Page 4 


  144 00000180 EBFFFFFE        BL               sendchar
  145 00000184 EAFFFFFE 
                       stop    B                stop
  146 00000188         
  147 00000188                 END
Command Line: --debug --xref --diag_suppress=9931 --apcs=interwork --depend=.\d
isplayresult.d -o.\displayresult.o -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\C
MSIS\Include -IC:\Keil_v5\ARM\INC\Philips --predefine="__EVAL SETA 1" --predefi
ne="__MICROLIB SETA 1" --predefine="__UVISION_VERSION SETA 524" --predefine="NO
_CLOCK_SETUP SETA 1" --predefine="NO_EMC_SETUP SETA 1" --predefine="RAM_INTVEC 
SETA 1" --predefine="RAM_MODE SETA 1" --predefine="REMAP SETA 1" --list=.\displ
ayresult.lst DisplayResult.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DisplayResult 00000000

Symbol: DisplayResult
   Definitions
      At line 1 in file DisplayResult.s
   Uses
      None
Comment: DisplayResult unused
addition 00000090

Symbol: addition
   Definitions
      At line 57 in file DisplayResult.s
   Uses
      At line 25 in file DisplayResult.s
      At line 49 in file DisplayResult.s

division1 000000E4

Symbol: division1
   Definitions
      At line 86 in file DisplayResult.s
   Uses
      At line 64 in file DisplayResult.s
      At line 73 in file DisplayResult.s
      At line 82 in file DisplayResult.s
      At line 93 in file DisplayResult.s

division2 0000010C

Symbol: division2
   Definitions
      At line 103 in file DisplayResult.s
   Uses
      At line 112 in file DisplayResult.s
Comment: division2 used once
endDivision1 00000100

Symbol: endDivision1
   Definitions
      At line 94 in file DisplayResult.s
   Uses
      At line 88 in file DisplayResult.s
Comment: endDivision1 used once
endDivision2 00000130

Symbol: endDivision2
   Definitions
      At line 113 in file DisplayResult.s
   Uses
      At line 107 in file DisplayResult.s
      At line 109 in file DisplayResult.s

endMiddleDigit 00000154

Symbol: endMiddleDigit
   Definitions
      At line 125 in file DisplayResult.s
   Uses



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

      At line 121 in file DisplayResult.s
Comment: endMiddleDigit used once
endProgram 00000174

Symbol: endProgram
   Definitions
      At line 139 in file DisplayResult.s
   Uses
      At line 137 in file DisplayResult.s
Comment: endProgram used once
endRead 00000078

Symbol: endRead
   Definitions
      At line 47 in file DisplayResult.s
   Uses
      At line 23 in file DisplayResult.s
Comment: endRead used once
largeNum 00000104

Symbol: largeNum
   Definitions
      At line 99 in file DisplayResult.s
   Uses
      At line 91 in file DisplayResult.s
Comment: largeNum used once
lastDigit 00000164

Symbol: lastDigit
   Definitions
      At line 133 in file DisplayResult.s
   Uses
      At line 105 in file DisplayResult.s
Comment: lastDigit used once
middleDigit 00000140

Symbol: middleDigit
   Definitions
      At line 119 in file DisplayResult.s
   Uses
      At line 124 in file DisplayResult.s
Comment: middleDigit used once
multiplication 000000C8

Symbol: multiplication
   Definitions
      At line 75 in file DisplayResult.s
   Uses
      At line 29 in file DisplayResult.s
      At line 53 in file DisplayResult.s

nextDigit 00000100

Symbol: nextDigit
   Definitions
      At line 96 in file DisplayResult.s
   Uses
      At line 131 in file DisplayResult.s
Comment: nextDigit used once



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

operand2 0000006C

Symbol: operand2
   Definitions
      At line 42 in file DisplayResult.s
   Uses
      At line 38 in file DisplayResult.s
Comment: operand2 used once
printDigit 00000154

Symbol: printDigit
   Definitions
      At line 127 in file DisplayResult.s
   Uses
      None
Comment: printDigit unused
programQuit 00000180

Symbol: programQuit
   Definitions
      At line 143 in file DisplayResult.s
   Uses
      None
Comment: programQuit unused
read 00000028

Symbol: read
   Definitions
      At line 20 in file DisplayResult.s
   Uses
      At line 40 in file DisplayResult.s
      At line 45 in file DisplayResult.s
      At line 62 in file DisplayResult.s
      At line 71 in file DisplayResult.s
      At line 80 in file DisplayResult.s

start 00000000

Symbol: start
   Definitions
      At line 8 in file DisplayResult.s
   Uses
      At line 5 in file DisplayResult.s
      At line 142 in file DisplayResult.s

stop 00000184

Symbol: stop
   Definitions
      At line 145 in file DisplayResult.s
   Uses
      At line 145 in file DisplayResult.s
Comment: stop used once
subtraction 000000AC

Symbol: subtraction
   Definitions
      At line 66 in file DisplayResult.s
   Uses



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols

      At line 27 in file DisplayResult.s
      At line 51 in file DisplayResult.s

21 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

getkey 00000000

Symbol: getkey
   Definitions
      At line 3 in file DisplayResult.s
   Uses
      At line 21 in file DisplayResult.s
Comment: getkey used once
main 00000000

Symbol: main
   Definitions
      At line 2 in file DisplayResult.s
   Uses
      None
Comment: main unused
sendchar 00000000

Symbol: sendchar
   Definitions
      At line 4 in file DisplayResult.s
   Uses
      At line 30 in file DisplayResult.s
      At line 58 in file DisplayResult.s
      At line 67 in file DisplayResult.s
      At line 76 in file DisplayResult.s
      At line 115 in file DisplayResult.s
      At line 129 in file DisplayResult.s
      At line 136 in file DisplayResult.s
      At line 141 in file DisplayResult.s
      At line 144 in file DisplayResult.s

3 symbols
362 symbols in table
